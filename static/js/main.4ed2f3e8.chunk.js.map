{"version":3,"sources":["components/Login.js","components/SignUp.js","components/BlogPage.js","components/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","setLoggedIn","useState","email","setEmail","password","setPassword","postData","user","a","fetch","method","headers","Accept","credentials","body","JSON","stringify","then","response","console","log","json","data","undefined","error","className","onSubmit","e","preventDefault","htmlFor","type","name","value","onChange","target","SignUp","BlogPage","blogs","setBlogs","loading","setLoading","useEffect","fetchData","Blog","App","loggedIn","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ed2f3e8.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    // gets setLoggedIn state from parent\r\n    const setLoggedIn = props.setLoggedIn\r\n\r\n    // creates email and password states to create a user object\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // creates a user based on form inputs\r\n    const createUserDetails = () =>{\r\n        let user = {\r\n            'email': email,\r\n            'password': password\r\n        }\r\n\r\n        return user\r\n    }\r\n    \r\n    // sends a post request to try and login user\r\n    const postData = async (user) => {\r\n        \r\n        try {\r\n            fetch('https://oisin-mern-blog.herokuapp.com/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(user)\r\n            })\r\n            .then(response =>  {\r\n                console.log(response);\r\n                return response.json()\r\n            })\r\n            // if there are erros they are logged to the console\r\n            .then((data) => {\r\n\r\n                if(data.error !== undefined){\r\n                    console.log(data.error);\r\n                }\r\n                else{\r\n                    console.log(data);\r\n                    // if there are no errors, loggIn state changes and user is redirected to blogs page\r\n                    setLoggedIn(true);\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    // function triggers when form is submitted\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        // creates user from state\r\n        let user = createUserDetails()\r\n        // posts data\r\n        postData(user)\r\n    }\r\n    \r\n    \r\n    \r\n    return ( \r\n        <main>\r\n            <div className=\"form-container\">\r\n                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"email\" className=\"login-label\">Email</label>\r\n                    <input \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    className=\"email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"password\" className=\"login-label\">Password</label>\r\n                    <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    className=\"password\"\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    />\r\n                    <button className=\"form-button\">Login</button>\r\n                </form>\r\n            </div>\r\n        </main>\r\n     );\r\n}\r\n    \r\nexport default Login;","const SignUp = () => {\r\n    return ( \r\n        <div>\r\n            sign-up\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SignUp;","import {useEffect, useState} from 'react'\r\n\r\nconst BlogPage = () => {\r\n\r\n    const [blogs, setBlogs] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchData = async () =>{\r\n            try {\r\n                fetch('https://oisin-mern-blog.herokuapp.com/blogs',{\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    credentials: \"include\",\r\n                })\r\n                // takes response and parses it into (returns a promise)\r\n                .then((response)=>{\r\n                   return response.json()\r\n                })\r\n                // logs data returnd from json parsing promise above\r\n                .then((data)=>{\r\n                    setBlogs(data);\r\n                    setLoading(false)\r\n                })      \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData()\r\n    })\r\n\r\n\r\n    return (\r\n\r\n        <div className='blogs-conatainer'>\r\n            {loading && <div>Loading...</div>}\r\n            {blogs && <div>blogs</div>}\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default BlogPage;","const Blog = () => {\r\n    return ( \r\n        <div> 1 blog </div>\r\n     );\r\n}\r\n \r\nexport default Blog;","import { useState } from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport BlogPage from './components/BlogPage';\nimport Blog from './components/Blog';\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState()\n\n  return (\n    <div className=\"Home\">\n      <Router>\n        <Link to='/login'><p>test2</p></Link>\n        <Switch>\n          <Route exact path='/login'>\n            <Login loggedIn = {loggedIn} setLoggedIn={setLoggedIn} />\n          </Route>\n          <Route exact path='/signup' > <SignUp/> </Route>\n          <Route exact path='/blogs' > <BlogPage /> </Route>\n          <Route path='/blogs/1'> <Blog/> </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n  }\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}